2 3 1 1 4

first get distance to end from current position and that is 4
[length - (indxPos + 1)] [5 - (0 + 1)]

first check are there one jumps that will get me to the end?
no because 2 is less than 4

now check are there two jumps that will get me to the end?
there are 2 possibilites first as the current position is 2:
    3 1 1 4 -> this will yield 3 possibilites:
                1 1 4
                1 4
                4 (and that is a solution so we should return now!)
                
    1 1 4 -> this only has one possibility which won't get us to the end -> 1 4

solution:
    output dp: 2
    output path: {0, 1, 4}